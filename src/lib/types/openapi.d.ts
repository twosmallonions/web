/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/collection/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Collections For User */
        get: operations["get_collections_for_user_api_collection__get"];
        put?: never;
        /** Create Collection */
        post: operations["create_collection_api_collection__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipe/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Recipes For User */
        get: operations["get_all_recipes_for_user_api_recipe__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipe/{collection_id}/{recipe_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Recipe By Id */
        get: operations["get_recipe_by_id_api_recipe__collection_id___recipe_id__get"];
        /** Update Recipe */
        put: operations["update_recipe_api_recipe__collection_id___recipe_id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipe/{collection_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Recipe In Collection */
        post: operations["create_recipe_in_collection_api_recipe__collection_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipe/{collection_id}/import": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Import Recipe From Url */
        post: operations["import_recipe_from_url_api_recipe__collection_id__import_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipe/{collection_id}/{recipe_id}/cover": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Add Thumbnail To Recipe */
        put: operations["add_thumbnail_to_recipe_api_recipe__collection_id___recipe_id__cover_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/asset/{collection_id}/{asset_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Asset */
        get: operations["get_asset_api_asset__collection_id___asset_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Healthcheck */
        get: operations["healthcheck__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_add_thumbnail_to_recipe_api_recipe__collection_id___recipe_id__cover_put */
        Body_add_thumbnail_to_recipe_api_recipe__collection_id___recipe_id__cover_put: {
            /**
             * File
             * Format: binary
             */
            file: string;
        };
        /** CollectionCreate */
        CollectionCreate: {
            /** Name */
            name: string;
        };
        /** CollectionFull */
        CollectionFull: {
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /**
             * Updatedat
             * Format: date-time
             */
            updatedAt: string;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ImportRecipe */
        ImportRecipe: {
            /**
             * Url
             * Format: uri
             */
            url: string;
        };
        /** Ingredient */
        Ingredient: {
            /** Text */
            text: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** IngredientUpdate */
        IngredientUpdate: {
            /** Text */
            text: string;
            /** Id */
            id: string | null;
        };
        /** Instruction */
        Instruction: {
            /** Text */
            text: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** InstructionUpdate */
        InstructionUpdate: {
            /** Text */
            text: string;
            /** Id */
            id: string | null;
        };
        /** ListResponse[RecipeLight] */
        ListResponse_RecipeLight_: {
            /** Cursor */
            cursor: string | null;
            /** Data */
            data: components["schemas"]["RecipeLight"][];
        };
        /** RecipeCreate */
        RecipeCreate: {
            /** Title */
            title: string;
            /**
             * Note
             * @default
             */
            note: string;
            /** Cooktime */
            cookTime?: number | null;
            /** Preptime */
            prepTime?: number | null;
            /** Recipeyield */
            recipeYield?: string | null;
            /**
             * Liked
             * @default false
             */
            liked: boolean;
            /** Originalurl */
            originalUrl?: string | null;
            /**
             * Instructions
             * @default []
             */
            instructions: string[];
            /**
             * Ingredients
             * @default []
             */
            ingredients: string[];
        };
        /** RecipeFull */
        RecipeFull: {
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /**
             * Updatedat
             * Format: date-time
             */
            updatedAt: string;
            /** Title */
            title: string;
            /**
             * Note
             * @default
             */
            note: string;
            /** Cooktime */
            cookTime?: number | null;
            /** Preptime */
            prepTime?: number | null;
            /** Recipeyield */
            recipeYield?: string | null;
            /**
             * Liked
             * @default false
             */
            liked: boolean;
            /** Originalurl */
            originalUrl?: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Totaltime */
            totalTime?: number | null;
            /** Lastmade */
            lastMade: string | null;
            /**
             * Instructions
             * @default []
             */
            instructions: components["schemas"]["Instruction"][];
            /**
             * Ingredients
             * @default []
             */
            ingredients: components["schemas"]["Ingredient"][];
            /** Coverimage */
            coverImage?: string | null;
            /** Coverthumbnail */
            coverThumbnail?: string | null;
            /**
             * Collection
             * Format: uuid
             */
            collection: string;
            /**
             * Createdby
             * Format: uuid
             */
            createdBy: string;
        };
        /** RecipeLight */
        RecipeLight: {
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /**
             * Updatedat
             * Format: date-time
             */
            updatedAt: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Collection
             * Format: uuid
             */
            collection: string;
            /** Title */
            title: string;
            /** Description */
            description: string | null;
            /** Liked */
            liked: boolean;
            /** Coverthumbnail */
            coverThumbnail: string | null;
        };
        /**
         * RecipeSortField
         * @enum {string}
         */
        RecipeSortField: "title" | "updated_at" | "created_at";
        /** RecipeUpdate */
        RecipeUpdate: {
            /** Title */
            title: string;
            /**
             * Note
             * @default
             */
            note: string;
            /** Cooktime */
            cookTime?: number | null;
            /** Preptime */
            prepTime?: number | null;
            /** Recipeyield */
            recipeYield?: string | null;
            /**
             * Liked
             * @default false
             */
            liked: boolean;
            /** Originalurl */
            originalUrl?: string | null;
            /**
             * Instructions
             * @default []
             */
            instructions: components["schemas"]["InstructionUpdate"][];
            /**
             * Ingredients
             * @default []
             */
            ingredients: components["schemas"]["IngredientUpdate"][];
        };
        /**
         * SortOrder
         * @enum {string}
         */
        SortOrder: "DESC" | "ASC";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_collections_for_user_api_collection__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CollectionFull"][];
                };
            };
        };
    };
    create_collection_api_collection__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CollectionCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CollectionFull"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_recipes_for_user_api_recipe__get: {
        parameters: {
            query?: {
                order?: components["schemas"]["SortOrder"];
                field?: components["schemas"]["RecipeSortField"];
                search?: string | null;
                limit?: number;
                cursor?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListResponse_RecipeLight_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_by_id_api_recipe__collection_id___recipe_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                recipe_id: string;
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeFull"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_recipe_api_recipe__collection_id___recipe_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
                recipe_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeFull"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_recipe_in_collection_api_recipe__collection_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeFull"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    import_recipe_from_url_api_recipe__collection_id__import_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImportRecipe"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeFull"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_thumbnail_to_recipe_api_recipe__collection_id___recipe_id__cover_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
                recipe_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_add_thumbnail_to_recipe_api_recipe__collection_id___recipe_id__cover_put"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeFull"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_asset_api_asset__collection_id___asset_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                collection_id: string;
                asset_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    healthcheck__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
